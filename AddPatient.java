
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class AddPatient extends javax.swing.JFrame {

    myDBCon dbCon;
    ResultSet rs;

    public AddPatient() {
        initComponents();
        this.setLocationRelativeTo(null); // center form in screen 
        // set all error labels to invisible
        lblPatIdError.setVisible(false);
        lblFnameError.setVisible(false);
        lblLnameError.setVisible(false);
        lblDateOfBirthError.setVisible(false);


        try {
            dbCon = new myDBCon();
            rs = dbCon.executeStatement("SELECT ward_id FROM ward ORDER BY ward_id ASC");
            // populate ward combo box
            while (rs.next()) {
                cmbWard.addItem(rs.getString("ward_id"));
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPatId = new javax.swing.JTextField();
        txtFname = new javax.swing.JTextField();
        txtLname = new javax.swing.JTextField();
        cmbWard = new javax.swing.JComboBox<>();
        btnAddNewPat = new javax.swing.JButton();
        lblPatIdError = new javax.swing.JLabel();
        lblLnameError = new javax.swing.JLabel();
        lblFnameError = new javax.swing.JLabel();
        lblDateOfBirthError = new javax.swing.JLabel();
        ftxtDateOfBirth = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Employee");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Patient");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("PATIENT ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("FIRST NAME:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("LAST NAME:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("WARD ID:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setText("DATE OF BIRTH:");

        txtPatId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtFname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        txtLname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLnameActionPerformed(evt);
            }
        });

        cmbWard.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnAddNewPat.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddNewPat.setText("Add New");
        btnAddNewPat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewPatActionPerformed(evt);
            }
        });

        lblPatIdError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblPatIdError.setForeground(new java.awt.Color(255, 0, 0));
        lblPatIdError.setText("error label");

        lblLnameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblLnameError.setForeground(new java.awt.Color(255, 0, 0));
        lblLnameError.setText("error label");

        lblFnameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblFnameError.setForeground(new java.awt.Color(255, 0, 0));
        lblFnameError.setText("error label");

        lblDateOfBirthError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblDateOfBirthError.setForeground(new java.awt.Color(255, 0, 0));
        lblDateOfBirthError.setText("error label");

        ftxtDateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ftxtDateOfBirth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtDateOfBirthActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtFname, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                        .addComponent(txtLname)
                        .addComponent(ftxtDateOfBirth))
                    .addComponent(cmbWard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lblFnameError, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                        .addComponent(lblLnameError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDateOfBirthError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(lblPatIdError, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(311, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(181, 181, 181))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnAddNewPat)
                        .addGap(311, 311, 311))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPatId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPatIdError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFnameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtLname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLnameError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtDateOfBirth, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(lblDateOfBirthError))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbWard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddNewPat)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLnameActionPerformed

    // verify valid entry of integer values
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // verify valid entry of double values
    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    void clearErrorLabels() { // clear all labels used to display error messages 
        lblPatIdError.setText("");
        lblPatIdError.setVisible(false);
        lblFnameError.setText("");
        lblFnameError.setVisible(false);
        lblLnameError.setText("");
        lblLnameError.setVisible(false);
        lblDateOfBirthError.setText("");
        lblDateOfBirthError.setVisible(false);

    }

    // validate all user entry before sending new employee details to DB
    boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB 
        if (txtPatId.getText().trim().isEmpty() || !isInteger(txtPatId.getText().trim())) {
            if (txtPatId.getText().trim().isEmpty()) {
                lblPatIdError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtPatId.getText().trim())) {
                lblPatIdError.setText("Invalid. Must be integer.");
            }
            lblPatIdError.setVisible(true);
            result = false;
        }

        if (txtFname.getText().trim().isEmpty() || (txtFname.getText().trim().length() > 30)) {
            if (txtFname.getText().trim().isEmpty()) {
                lblFnameError.setText("Invalid. Cannot be empty.");
            } else if ((txtFname.getText().trim().length() > 30)) {
                lblFnameError.setText("Invalid. Must be <= 30 chars.");
            }
            lblFnameError.setVisible(true);
            result = false;
        }

        if (txtLname.getText().trim().isEmpty() || (txtLname.getText().trim().length() > 30)) {
            if (txtLname.getText().trim().isEmpty()) {
                lblLnameError.setText("Invalid. Cannot be empty.");
            } else if (txtLname.getText().trim().length() > 30) {
                lblLnameError.setText("Invalid. Must be <= 30 chars.");
            }
            lblLnameError.setVisible(true);
            result = false;
        }

        if (ftxtDateOfBirth.getText().trim().isEmpty()) {
            lblDateOfBirthError.setText("Invalid. Cannot be empty.");
            lblDateOfBirthError.setVisible(true);
            result = false;
        }

        return result;
    }

    void clearInputBoxes() { // clear for every new entry 
        txtPatId.setText("");
        txtFname.setText("");
        txtLname.setText("");
        ftxtDateOfBirth.setText("");
        cmbWard.setSelectedIndex(0);
    }

    private boolean isDuplicate(int patid) throws SQLException {
        boolean isduplicate = false;
        String stmtSQL = "SELECT patient_id FROM patient WHERE patient_id = " + patid;
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    private void btnAddNewPatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewPatActionPerformed
        // TODO add your handling code here:

        try {
           // you need also to verify that the empno is unique and not duplicate 
              
            if (isValidData() && !isDuplicate(Integer.parseInt(txtPatId.getText().trim()))) {
              
                // if new employee details are valid, then add new employee to DB
                String prepSQL = "INSERT INTO patient (patient_id, fname, lname, date_of_birth, ward_id) VALUES (" 
                        + txtPatId.getText().trim() + ", "
                        + "'" + txtFname.getText().toUpperCase() 
                        + "', '"  + txtLname.getText().toUpperCase() 
                        + "', '" + ftxtDateOfBirth.getText().trim()
                        + "', " + cmbWard.getSelectedItem().toString() + " )";

                int result = dbCon.executePrepared(prepSQL);
                //if succesfull
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New patient added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                }  }
                else { //validation error
                if (!isDuplicate(Integer.parseInt(txtPatId.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else { //employee already exists
                    javax.swing.JLabel label = new javax.swing.JLabel("Patient_id Already exists. Use a different number.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    
                }

            }
        } catch (SQLException e) {
            //error adding employee
            JOptionPane.showMessageDialog(null, "Error adding new patient."+e.getMessage());
        }
    }//GEN-LAST:event_btnAddNewPatActionPerformed

    private void ftxtDateOfBirthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtDateOfBirthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtDateOfBirthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewPat;
    private javax.swing.JComboBox<String> cmbWard;
    private javax.swing.JTextField ftxtDateOfBirth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblDateOfBirthError;
    private javax.swing.JLabel lblFnameError;
    private javax.swing.JLabel lblLnameError;
    private javax.swing.JLabel lblPatIdError;
    private javax.swing.JTextField txtFname;
    private javax.swing.JTextField txtLname;
    private javax.swing.JTextField txtPatId;
    // End of variables declaration//GEN-END:variables
}
