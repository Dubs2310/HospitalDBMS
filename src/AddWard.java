
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

public class AddWard extends javax.swing.JFrame {

    /**
     * Creates new form AddEmployee
     */
    myDBCon dbCon;
    ResultSet rs;

    public AddWard() {
      
        initComponents();
           this.setTitle("Add Wards");
        setSize(766, 300);
        this.setLocationRelativeTo(null); // center form in screen 
        // set all error labels to invisible
        lblWardIdError.setVisible(false);
        lblWardNameError.setVisible(false);
        lblWardLocError.setVisible(false);

        dbCon = new myDBCon();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtWardId = new javax.swing.JTextField();
        txtWardName = new javax.swing.JTextField();
        txtWardLoc = new javax.swing.JTextField();
        btnAddNewWard = new javax.swing.JButton();
        lblWardIdError = new javax.swing.JLabel();
        lblWardLocError = new javax.swing.JLabel();
        lblWardNameError = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add New Employee");
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Add New Ward");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(252, 20, 272, 44);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("WARD ID:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(250, 90, 93, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("WARD NAME:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(220, 130, 123, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("WARD LOCATION:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(180, 170, 166, 30);

        txtWardId.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtWardId);
        txtWardId.setBounds(350, 90, 100, 30);

        txtWardName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        getContentPane().add(txtWardName);
        txtWardName.setBounds(350, 130, 200, 30);

        txtWardLoc.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtWardLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWardLocActionPerformed(evt);
            }
        });
        getContentPane().add(txtWardLoc);
        txtWardLoc.setBounds(350, 170, 200, 30);

        btnAddNewWard.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        btnAddNewWard.setText("Add New");
        btnAddNewWard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewWardActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddNewWard);
        btnAddNewWard.setBounds(350, 210, 170, 45);

        lblWardIdError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblWardIdError.setForeground(new java.awt.Color(255, 0, 0));
        lblWardIdError.setText("error label");
        getContentPane().add(lblWardIdError);
        lblWardIdError.setBounds(560, 90, 188, 22);

        lblWardLocError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblWardLocError.setForeground(new java.awt.Color(255, 0, 0));
        lblWardLocError.setText("error label");
        getContentPane().add(lblWardLocError);
        lblWardLocError.setBounds(560, 170, 188, 22);

        lblWardNameError.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblWardNameError.setForeground(new java.awt.Color(255, 0, 0));
        lblWardNameError.setText("error label");
        getContentPane().add(lblWardNameError);
        lblWardNameError.setBounds(560, 130, 188, 30);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hospitaldbms/ward.png"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 90, 128, 128);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtWardLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWardLocActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWardLocActionPerformed

    // verify valid entry of integer values
    public boolean isInteger(String s) {
        try {
            Integer.parseInt(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    // verify valid entry of double values
    public boolean isDouble(String s) {
        try {
            Double.parseDouble(s);
            return true;
        } catch (NumberFormatException ex) {
            return false;
        }
    }

    void clearErrorLabels() { // clear all labels used to display error messages 
        lblWardIdError.setText("");
        lblWardIdError.setVisible(false);
        lblWardNameError.setText("");
        lblWardNameError.setVisible(false);
        lblWardLocError.setText("");
        lblWardLocError.setVisible(false);

    }

    // validate all user entry before sending new employee details to DB
    boolean isValidData() {
        clearErrorLabels();
        boolean result = true; // assume all details are true, set to false if otherwise 
        // you need to check format deails and make sure they are consistent with DB 
        if (txtWardId.getText().trim().isEmpty() || !isInteger(txtWardId.getText().trim())) {
            if (txtWardId.getText().trim().isEmpty()) {
                lblWardIdError.setText("Invalid. Cannot be empty.");
            } else if (!isInteger(txtWardId.getText().trim())) {
                lblWardIdError.setText("Invalid. Must be integer.");
            }
            lblWardIdError.setVisible(true);
            result = false;
        }

        if (txtWardName.getText().trim().isEmpty() || (txtWardName.getText().trim().length() > 30)) {
            if (txtWardName.getText().trim().isEmpty()) {
                lblWardNameError.setText("Invalid. Cannot be empty.");
            } else if ((txtWardName.getText().trim().length() > 30)) {
                lblWardNameError.setText("Invalid. Must be <= 30 chars.");
            }
            lblWardNameError.setVisible(true);
            result = false;
        }

        if (txtWardLoc.getText().trim().isEmpty() || (txtWardLoc.getText().trim().length() > 30)) {
            if (txtWardLoc.getText().trim().isEmpty()) {
                lblWardLocError.setText("Invalid. Cannot be empty.");
            } else if (txtWardLoc.getText().trim().length() > 30) {
                lblWardLocError.setText("Invalid. Must be <= 30 chars.");
            }
            lblWardLocError.setVisible(true);
            result = false;
        }

        return result;
    }

    void clearInputBoxes() { // clear for every new entry 
        txtWardId.setText("");
        txtWardName.setText("");
        txtWardLoc.setText("");
    }

    private boolean isDuplicate(int wardid) throws SQLException {
        boolean isduplicate = false;
        String stmtSQL = "SELECT ward_id FROM ward WHERE ward_id = " + wardid;
        rs = dbCon.executeStatement(stmtSQL);
        // isBeforeFirst() returns false if there are no data in the resultset
        isduplicate = rs.isBeforeFirst();

        return isduplicate;
    }
    private void btnAddNewWardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewWardActionPerformed
        // TODO add your handling code here:

        try {
           // you need also to verify that the empno is unique and not duplicate 
              
            if (isValidData() && !isDuplicate(Integer.parseInt(txtWardId.getText().trim()))) {
              
                // if new employee details are valid, then add new employee to DB
                String prepSQL = "INSERT INTO ward (ward_id, ward_name, ward_location) VALUES (" 
                        + txtWardId.getText().trim() + ", "
                        + "'" + txtWardName.getText().toUpperCase() 
                        + "', "  + "'" + txtWardLoc.getText().toUpperCase() 
                        + "')";

                int result = dbCon.executePrepared(prepSQL);
                //if succesfull
                if (result > 0) {

                    javax.swing.JLabel label = new javax.swing.JLabel("New ward added successfully.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                    clearInputBoxes();
                }  }
                else { //validation error
                if (!isDuplicate(Integer.parseInt(txtWardId.getText().trim()))) {
                    javax.swing.JLabel label = new javax.swing.JLabel("Please fix validation errors...");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.ERROR_MESSAGE);
                } else { //employee already exists
                    javax.swing.JLabel label = new javax.swing.JLabel("Ward Already exists. Use a different number.");
                    label.setFont(new java.awt.Font("Arial", java.awt.Font.BOLD, 18));
                    JOptionPane.showMessageDialog(null, label, "ERROR", JOptionPane.INFORMATION_MESSAGE);
                    
                }

            }
        } catch (SQLException e) {
            //error adding employee
            JOptionPane.showMessageDialog(null, "Error adding new ward."+e.getMessage());
        }
    }//GEN-LAST:event_btnAddNewWardActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewWard;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblWardIdError;
    private javax.swing.JLabel lblWardLocError;
    private javax.swing.JLabel lblWardNameError;
    private javax.swing.JTextField txtWardId;
    private javax.swing.JTextField txtWardLoc;
    private javax.swing.JTextField txtWardName;
    // End of variables declaration//GEN-END:variables
}
